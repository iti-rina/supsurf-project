name: Push Docker image to Dockerhub

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  IMAGE_PATH: "itirina/sup-image"
  CONTAINER_NAME: "sup19"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PATH }}:${{ github.run_id }}
            ${{ env.IMAGE_PATH }}:latest


  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare ssh config
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo -e "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host target-host
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.DEPLOY_HOST }}
          SSH_USER: ${{ secrets.DEPLOY_USER }}
          SSH_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}

      - name: Pull a new image
        run: |
          ssh target-host "docker pull ${IMAGE_PATH}:${{ github.run_id }}"
      
      - name: Stop the previous container
        run: |
          ssh target-host "docker rm -f ${CONTAINER_NAME} || true"

      - name: Start a new one
        run: |
          ssh target-host "docker run --name=${CONTAINER_NAME} -p 80:80 -p 443:443 -d ${IMAGE_PATH}:${{ github.run_id }}"

